{"version":3,"sources":["modules/generator.js","actions/actionTypes.js","actions/sessionActions.js","components/Header/Header.js","components/CreateSlideshow/CreateSlideshow.js","components/Common/Primitives/TextInputPrimitive.js","components/SignUpModal/SignUpModal.js","components/Slideshow/SlideshowFullscreen.js","components/Common/Button/Button.js","components/MySlideshows/MySlideshows.js","components/EditSlideshow/EditSlideshow.js","components/Administration/Administration.js","App.js","serviceWorker.js","reducers/index.js","reducers/sessionReducer.js","index.js","store/configureStore.js","modules/authentication.js"],"names":["module","exports","generateAccessCode","length","result","characters","charactersLength","i","charAt","Math","floor","random","SHOW_SIGNUP_MODAL","RESET_APP","LOGIN_SUCCESS","LOGIN_FAILED","SIGNUP_SUCCESS","SIGNUP_FAILED","GET_SLIDES_SUCCESS","GET_USER_SLIDESHOWS_SUCCESS","SIGN_OUT","getLiveSlideshow","username","dispatch","axios","post","then","res","console","log","data","getSlidesByTag","TagName","catch","error","deleteImage","publicId","tagName","showSignupModal","type","types","login","password","status","loginFailed","success","window","localStorage","setItem","token","user","isAdmin","company","loginSuccess","getUserSlideshows","createUser","Error","statusText","signupUser","signupSuccess","signupFailed","deleteSlideshow","id","getUserSlideshowsSuccess","images","resources","forEach","element","push","getSlidesSuccess","saveSlideshowInSQL","files","startDate","endDate","saveGuestSlideshow","userSlideshows","imageList","email","resetApp","signOut","styled","img","_templateObject","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","toggle","state","isOpen","setState","authentication","sessionActions","history","react_default","a","createElement","Navbar","dark","expand","className","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","session","NavItem","react_router_dom","activeClassName","to","Fragment","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","React","Component","withRouter","connect","ownProps","bindActionCreators","thumb","display","borderRadius","border","marginBottom","marginRight","padding","boxSizing","thumbInner","minWidth","overflow","width","height","CreateSlideshow","disabled","onTagNameChange","onSubmit","verifyToken","loggedIn","event","target","value","_this2","uploaders","map","file","slideshowName","formData","FormData","append","Date","now","headers","X-Requested-With","response","secure_url","all","allFiles","assign","preview","URL","createObjectURL","f","style","key","name","src","components_Header_Header","es","onDrop","_ref","getRootProps","getInputProps","alt","FormGroup","Input","onChange","es_Button","TextInputPrimitive","onFocus","select","defaultProps","required","defaultValue","placeholder","SignUpModal","context","onClickSignUp","passwordOnChange","passwordVerifyOnChange","emailOnChange","memberLogin","memberSignUp","onClickLogin","closeModal","alreadyMember","passwordVerify","signupError","displayEmailError","displayPasswordError","password2","clearWarnings","test","String","toLowerCase","Modal","ModalBody","Primitives_TextInputPrimitive","color","api","zoomOutProperties","duration","transitionDuration","infinite","indicators","scale","arrows","SlideshowFullscreen","lib","each","public_id","url","Button","displayText","objectWithoutProperties","MySlideshows","editSlideshow","params","queryString","parse","location","search","e","Table","item","start","StartDate","end","EndDate","ID","toString","Common_Button_Button","configurationId","showButton","ImgStyled","EditSlideshow_templateObject","H2","h2","_templateObject2","ButtonStyled","_templateObject3","RowStyled","Row","_templateObject4","EditSlideshow","removeImage","newImage","undefined","newFiles","_this3","Container","Col","xs","xl","GenerateButton","Administration_templateObject","AccessCodeInput","Administration_templateObject2","AccessCodeLabel","label","Administration_templateObject3","Alert","h3","Administration_templateObject4","Administration","onStartDateChange","onEndDateChange","generateCode","createGuestSlideshow","onUsernameChange","onAccessCodeChange","accessCode","alert","generator","for","readonly","readOnly","App","react_router","exact","path","component","components_SignUpModal_SignUpModal","Boolean","hostname","match","appReducer","combineReducers","arguments","action","objectSpread","rootReducer","store","initialState","enhancers","compose","applyMiddleware","thunk","reduxImmutableStateInvariant","devToolsExtension","createStore","configureStore","ReactDOM","render","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","jwt","require","getItem","decoded","decode","dateNow","exp","getTime","getUserFromToken","removeItem"],"mappings":"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","file":"static/js/main.56e57bbd.chunk.js","sourcesContent":["module.exports = {\r\n    generateAccessCode: function(length) {\r\n        var result           = '';\r\n        var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for ( var i = 0; i < length; i++ ) {\r\n           result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n     }\r\n}\r\n","export const SHOW_SIGNUP_MODAL = 'SHOW_SIGNUP_MODAL';\r\nexport const RESET_APP = 'RESET_APP';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAILED = 'SIGNUP_FAILED';\r\nexport const GET_SLIDES_SUCCESS = 'GET_SLIDES_SUCCESS';\r\nexport const SAVE_SLIDES_IN_SQL = 'SAVE_SLIDES_IN_SQL';\r\nexport const GET_USER_SLIDESHOWS = 'GET_USER_SLIDESHOWS';\r\nexport const GET_USER_SLIDESHOWS_SUCCESS = 'GET_USER_SLIDESHOWS_SUCCESS';\r\nexport const DELETE_SLIDESHOW = 'DELETE_SLIDESHOW';\r\nexport const DELETE_IMAGE = 'DELETE_IMAGE';\r\nexport const LIVE_SLIDESHOW = 'LIVE_SLIDESHOW';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const SAVE_GUEST_SLIDESHOW = 'SAVE_GUEST_SLIDESHOW';","import * as types from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport function getLiveSlideshow(username) {\r\n    return dispatch => {\r\n        return axios.post('/api/liveSlideshow', { username: username })\r\n        .then(res => {      \r\n            console.log(res);\r\n            if (res.data.result.length > 0)\r\n                dispatch(getSlidesByTag(res.data.result[0].TagName));                                                                                                                                                                              \r\n        }).catch(function(error) {\r\n            console.log(error);           \r\n        });\r\n    }\r\n}\r\n\r\nexport function deleteImage(publicId, tagName) {\r\n    return dispatch => {\r\n        return axios.post('/api/deleteImage', { publicId: publicId })\r\n        .then(res => {            \r\n            dispatch(getSlidesByTag(tagName));                                                                                                                                                                              \r\n        }).catch(function(error) {\r\n            console.log(error);           \r\n        });\r\n    }\r\n}\r\n\r\nexport function showSignupModal(showSignupModal) {\r\n    return { type: types.SHOW_SIGNUP_MODAL, showSignupModal }\r\n}\r\n\r\nexport const login = (username, password) => {\r\n    return dispatch => {\r\n        return axios.post('/users/login', { username: username, password: password })\r\n            .then(res => {\r\n                if (res.status !== 200) {\r\n                    dispatch(loginFailed());                                                                   \r\n                } else {\r\n                    console.log(res);\r\n                    if (res.data.success === true)                        \r\n                        window.localStorage.setItem('tk', res.data.token);\r\n\r\n                    let user = {\r\n                        username: username,\r\n                        isAdmin: res.data.isAdmin,\r\n                        company: res.data.company\r\n                    }\r\n\r\n                    dispatch(loginSuccess(user));    \r\n                    dispatch(getUserSlideshows(username));                                \r\n                }                                                                                                               \r\n            }).catch(function(error) {\r\n                console.log(error);\r\n                dispatch(loginFailed()); \r\n            });\r\n    }\r\n}\r\n\r\nexport const createUser = (username, password) => {\r\n    return dispatch => {\r\n        return axios.post('/users/signup', { username: username, password: password })\r\n            .then(res => {\r\n                if (res.status !== 200) throw Error(res.statusText);                                             \r\n            }).catch(function(error) {\r\n                console.log(error);\r\n                dispatch(loginFailed()); \r\n            });\r\n    }\r\n}\r\n\r\nexport const signupUser = (username, password) => {\r\n    return dispatch => {\r\n        return axios.post('/users/signup', { username: username, password: password })\r\n            .then(res => {\r\n                if (res.status !== 200) throw Error(res.statusText);                                \r\n\r\n                if (res.data === 'success') \r\n                    dispatch(signupSuccess(username));\r\n                else\r\n                    dispatch(signupFailed());\r\n            }).catch(function(error) {\r\n                console.log(error);\r\n                dispatch(loginFailed()); \r\n            });\r\n    }\r\n}\r\n\r\nexport const deleteSlideshow = (id, username) => {\r\n    return dispatch => {\r\n        return axios.post('/api/deleteSlideshow', { id: id })\r\n        .then(res => { \r\n            if (res.status !== 200) throw Error(res.statusText); \r\n                                                                        \r\n            dispatch(getUserSlideshows(username));\r\n        }).catch(error => {\r\n            throw(error);\r\n        }); \r\n    }\r\n}\r\n\r\nexport const getUserSlideshows = (username) => {\r\n    return dispatch => {\r\n        return axios.post('/api/getUserSlideshows', { username: username})\r\n        .then(res => { \r\n            if (res.status !== 200) throw Error(res.statusText); \r\n            console.log(res.data.result);\r\n           \r\n            dispatch(getUserSlideshowsSuccess(res.data.result));\r\n                                     \r\n        }).catch(error => {\r\n            throw(error);\r\n        }); \r\n    }\r\n}\r\n\r\nexport const getSlidesByTag = (tagName) => {\r\n    return dispatch => {\r\n        return axios.post('/api/slideshow', { tagName: tagName})\r\n        .then(res => { \r\n            if (res.status !== 200) throw Error(res.statusText);                                           \r\n            var images = [];\r\n\r\n            if (res.data === '') return;\r\n\r\n            res.data.resources.forEach(element => {                \r\n                images.push(element);\r\n            });\r\n                \r\n            dispatch(getSlidesSuccess(images));                              \r\n        }).catch(error => {\r\n            throw(error);\r\n        }); \r\n    }\r\n}\r\n\r\nexport const saveSlideshowInSQL = (files, username, tagName, startDate, endDate) => {\r\n    return dispatch => {\r\n        return axios.post('/api/saveSlideshowSQL', { files: files, username: username, tagName: tagName, startDate: startDate, endDate: endDate })\r\n        .then(res => { \r\n            if (res.status !== 200) throw Error(res.statusText);                                           \r\n                                                                            \r\n        }).catch(error => {\r\n            throw(error);\r\n        }); \r\n    }\r\n}\r\n\r\nexport const saveGuestSlideshow = (username, tagName, startDate, endDate) => {\r\n    return dispatch => {\r\n        return axios.post('/api/saveGuestSlideshow', { username: username, tagName: tagName, startDate: startDate, endDate: endDate })\r\n        .then(res => { \r\n            if (res.status !== 200) throw Error(res.statusText);                                           \r\n                                                                            \r\n        }).catch(error => {\r\n            throw(error);\r\n        }); \r\n    }\r\n}\r\n\r\nexport function getUserSlideshowsSuccess(userSlideshows) {\r\n    return { type: types.GET_USER_SLIDESHOWS_SUCCESS, userSlideshows };\r\n}\r\n\r\nexport function getSlidesSuccess(imageList) {\r\n    return { type: types.GET_SLIDES_SUCCESS, imageList };\r\n}\r\n\r\nexport function loginSuccess(user) {\r\n    return { type: types.LOGIN_SUCCESS, user };\r\n}\r\n\r\nexport function loginFailed() {\r\n    return { type: types.LOGIN_FAILED };\r\n}\r\n\r\nexport function signupSuccess(email) {\r\n    return { type: types.SIGNUP_SUCCESS, email };\r\n}\r\n\r\nexport function signupFailed() {\r\n    return { type: types.SIGNUP_FAILED };\r\n}\r\n\r\nexport function resetApp() {\r\n    return { type: types.RESET_APP };\r\n}\r\n\r\nexport function signOut() {\r\n    return { type: types.SIGN_OUT };\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport * as sessionActions from '../../actions/sessionActions';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Header.css';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    //NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem \r\n} from 'reactstrap';\r\nimport authentication from '../../modules/authentication';\r\n\r\nconst Img = styled.img`    \r\n    padding:1em;\r\n    height:70px;\r\n`;\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.signOut = this.signOut.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n\r\n        this.state = {\r\n          isOpen: false,\r\n          username: ''\r\n        };\r\n      }\r\n\r\n    toggle() {\r\n        this.setState({\r\n          isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    signOut() {\r\n        authentication.signOut();    \r\n        this.props.sessionActions.signOut();                   \r\n        this.props.history.push('/');        \r\n    }\r\n\r\n    render() {                        \r\n        return (            \r\n            <Navbar id=\"slideshowNavbar\" dark=\"true\" expand=\"md\">\r\n                <div className=\"container\">\r\n                <NavbarBrand href=\"/\"></NavbarBrand>\r\n                <NavbarToggler onClick={this.toggle} />\r\n                <Collapse isOpen={this.state.isOpen} navbar>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n\r\n                    {\r\n                    this.props.session.isAdmin === true ? \r\n                    <NavItem>\r\n                        <NavLink activeClassName=\"selected\" className=\"nav-link\" to=\"/\">Slideshow</NavLink>\r\n                    </NavItem>\r\n                    : <React.Fragment />\r\n                    }\r\n                    {/* <NavItem>\r\n                        <NavLink activeClassName=\"selected\" className=\"nav-link\" to=\"/Slideshow\">Slideshow</NavLink>\r\n                    </NavItem> */}\r\n                    {/* <NavItem>\r\n                        <NavLink activeClassName=\"selected\" className=\"nav-link\" to=\"/CreateSlideshow\">Create Slideshow</NavLink>\r\n                    </NavItem> */}\r\n                    <NavItem>\r\n                        <NavLink activeClassName=\"selected\" className=\"nav-link\" to=\"/MySlideshows\">My Slideshows</NavLink>\r\n                    </NavItem>\r\n                    \r\n                    <UncontrolledDropdown nav inNavbar>\r\n                        <DropdownToggle nav caret>\r\n                        {this.props.session.email}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                            <DropdownItem>                               \r\n                                {/* <NavItem>\r\n                                    <NavLink activeClassName=\"selected\" className=\"nav-link\" to=\"/MySlideshows\">My Slideshows</NavLink>\r\n                                </NavItem>                                */}\r\n                                {\r\n                                    this.props.session.isAdmin === true ? \r\n                                    <NavItem>\r\n                                        <NavLink activeClassName=\"selected\" className=\"nav-link\" to=\"/administration\">Administration</NavLink>\r\n                                    </NavItem>\r\n                                    : <React.Fragment />\r\n                                }\r\n                                <NavItem>\r\n                                <span className=\"nav-link pointer\" onClick={this.signOut}>Sign Out</span>\r\n                                </NavItem>\r\n                            </DropdownItem>                               \r\n                         </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n\r\n                       \r\n                  \r\n                   \r\n                    </Nav>\r\n                </Collapse>\r\n                </div>\r\n            </Navbar>\r\n        \r\n        );                       \r\n    }\r\n};\r\n\r\nfunction mapStateToProps(state, ownProps) {    \r\n    return {\r\n      session: state.session    \r\n    };\r\n  }\r\n  \r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        sessionActions: bindActionCreators(sessionActions, dispatch)          \r\n    };\r\n}  \r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header));","import React from 'react'\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios'\r\nimport './CreateSlideshow.css';\r\nimport { Button, FormGroup, Input } from 'reactstrap';\r\nimport Header from '../Header/Header';\r\nimport * as sessionActions from '../../actions/sessionActions';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport authentication from '../../modules/authentication';\r\n// const thumbsContainer = {\r\n//   display: 'flex',\r\n//   flexDirection: 'row',\r\n//   flexWrap: 'wrap',\r\n//   marginTop: 16\r\n// };\r\n\r\nconst thumb = {\r\n  display: 'inline-flex',\r\n  borderRadius: 2,\r\n  border: '1px solid #eaeaea',\r\n  marginBottom: 8,\r\n  marginRight: 8, \r\n  padding: 4,\r\n  boxSizing: 'border-box'\r\n};\r\n\r\nconst thumbInner = {\r\n  display: 'flex',\r\n  minWidth: 0,\r\n  overflow: 'hidden'\r\n}\r\n\r\nconst img = {\r\n  display: 'block',\r\n  width: 'auto',\r\n  height: '100%'\r\n};\r\n\r\nclass CreateSlideshow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {  \r\n            disabled: false,     \r\n            files: [],\r\n            tagName: ''\r\n        }\r\n\r\n        this.onTagNameChange = this.onTagNameChange.bind(this);  \r\n        this.onSubmit = this.onSubmit.bind(this); \r\n      \r\n        let username = authentication.verifyToken();\r\n\r\n        if (username) {\r\n          if (this.props.session.email === \"\" || this.props.session.loggedIn === false) {            \r\n              this.props.sessionActions.loginSuccess(username);                  \r\n          }\r\n        }\r\n      }\r\n\r\n      onTagNameChange(event) {\r\n        this.setState({ tagName: event.target.value });        \r\n      }\r\n\r\n     \r\n\r\n      onSubmit() {\r\n        let files = this.state.files;\r\n        // Push all the axios request promise into a single array\r\n        const uploaders = files.map(file => {\r\n\r\n          var slideshowName = this.state.tagName;\r\n          // Initial FormData\r\n          const formData = new FormData();\r\n          formData.append(\"file\", file);       \r\n          formData.append(\"tags\", slideshowName);\r\n          formData.append(\"upload_preset\", \"vcuvbm56\"); // Replace the preset name with your own\r\n          formData.append(\"api_key\", \"812922695185549\"); // Replace API key with your own Cloudinary key\r\n          formData.append(\"timestamp\", (Date.now() / 1000) | 0);\r\n          \r\n          // Make an AJAX upload request using Axios (replace Cloudinary URL below with your own)\r\n          return axios.post(\"https://api.cloudinary.com/v1_1/oabroad/image/upload\", formData, {\r\n            headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\r\n          }).then(response => {\r\n            const data = response.data;\r\n            const fileURL = data.secure_url // You should store this URL for future references in your app           \r\n          })\r\n        });\r\n      \r\n        // Once all the files are uploaded \r\n        axios.all(uploaders).then(() => {\r\n          // ... perform after upload is successful operation files, username, tagName, startDate, endDate\r\n          this.saveSlideshowInSQL(files, this.props.session.email, this.state.tagName);\r\n        });\r\n      }\r\n\r\n      saveSlideshowInSQL(files, username, tagName, startDate, endDate) {\r\n        this.props.sessionActions.saveSlideshowInSQL(files, username, tagName);\r\n      }\r\n\r\n      onDrop(files) {\r\n        let allFiles = [];\r\n        this.state.files.forEach(function(element) {\r\n          allFiles.push(element);\r\n        });        \r\n\r\n        let newFiles = files.map(file => Object.assign(file, {\r\n          preview: URL.createObjectURL(file)\r\n        }));\r\n\r\n        newFiles.forEach(function(f) {\r\n          allFiles.push(f);\r\n        });\r\n\r\n        this.setState({\r\n          files: allFiles.map(file => Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n          }))\r\n        });\r\n      }         \r\n    \r\n      render() {\r\n        const files = this.state.files.map(file => (\r\n          <div style={thumb} key={file.name}>\r\n            <div style={thumbInner}>\r\n              <img\r\n                src={file.preview}\r\n                style={img}\r\n              />\r\n            </div>\r\n          </div>\r\n        ))\r\n    \r\n        return (\r\n          <section>\r\n            <Header />\r\n            <div className=\"dropzone\">\r\n              <Dropzone onDrop={this.onDrop.bind(this)} >\r\n                {({getRootProps, getInputProps}) => (\r\n                  <div {...getRootProps()}>\r\n                    <input {...getInputProps()} />                    \r\n                     <p className=\"text-center\">\r\n                        <img src=\"/download.png\" alt=\"\" />\r\n                        <span className=\"dropFileLabel\">Drop files here, or click to select files</span>\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </Dropzone>\r\n            </div>\r\n            <p className=\"text-center\">To create a slideshow, drag and drop files onto the \r\n            dropzone above or click the clickzone to open file explorer. Then enter a unique name for the slideshow and the date/time the slideshow should run.</p>\r\n            <aside>\r\n              <h4>File Preview</h4>\r\n              <ul className=\"filePreview\">{files}</ul>\r\n            </aside>\r\n            \r\n            <form className=\"container uploadForm\">\r\n                <FormGroup>\r\n                    <label className=\"label\">Slideshow Name</label>\r\n                    <Input type=\"text\" id=\"slideshowName\" onChange={this.onTagNameChange} />\r\n                </FormGroup>               \r\n                <Button onClick={this.onSubmit}>Submit</Button>\r\n            </form>\r\n          </section>\r\n        );\r\n      }\r\n    }\r\n\r\n    function mapStateToProps(state, ownProps) {    \r\n      return {\r\n        session: state.session    \r\n      };\r\n    }\r\n    \r\n      function mapDispatchToProps(dispatch) {\r\n          return {\r\n              sessionActions: bindActionCreators(sessionActions, dispatch)          \r\n          };\r\n      }   \r\n    \r\n    export default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateSlideshow));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextInputPrimitive = props => { \r\n    \r\n    const handleFocus = (event) => event.target.select();\r\n    \r\n    return (                        \r\n        <input {...props}  onFocus={handleFocus} />        \r\n    );     \r\n}  \r\n\r\nexport default TextInputPrimitive; \r\n\r\nTextInputPrimitive.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    onBlur: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n    required: PropTypes.bool,\r\n    defaultValue: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    type: PropTypes.string\r\n  };\r\n\r\nTextInputPrimitive.defaultProps = {\r\n    disabled: false,\r\n    required: false,\r\n    defaultValue: \"\",\r\n    placeholder: \"Please enter a value\",\r\n    type: \"text\"\r\n    \r\n}","import React, { Component } from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport * as sessionActions from '../../actions/sessionActions';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button, Modal, ModalBody } from 'reactstrap';\r\nimport './SignUpModal.css';\r\nimport TextInputPrimitive from '../Common/Primitives/TextInputPrimitive';\r\n\r\nclass SignUpModal extends Component { \r\n    constructor(props, context) {\r\n        super(props, context);    \r\n        \r\n        this.onClickSignUp = this.onClickSignUp.bind(this); \r\n        this.passwordOnChange = this.passwordOnChange.bind(this); \r\n        this.passwordVerifyOnChange = this.passwordVerifyOnChange.bind(this); \r\n        this.emailOnChange = this.emailOnChange.bind(this);  \r\n        this.memberLogin = this.memberLogin.bind(this);  \r\n        this.memberSignUp = this.memberSignUp.bind(this);  \r\n        this.onClickLogin = this.onClickLogin.bind(this);  \r\n        this.closeModal = this.closeModal.bind(this);\r\n\r\n        this.state = {\r\n            alreadyMember: true,\r\n            email: '',\r\n            password: '',\r\n            passwordVerify: '',\r\n            signupError: ''\r\n        }\r\n    }\r\n\r\n    memberSignUp() {     \r\n        this.setState({ alreadyMember: false, signupError: '' });\r\n    }\r\n\r\n    memberLogin() {        \r\n        this.setState({ alreadyMember: true, signupError: '' });\r\n    }\r\n\r\n    passwordOnChange(event) {\r\n        this.setState({password: event.target.value });\r\n    }\r\n\r\n    passwordVerifyOnChange(event) {\r\n        this.setState({passwordVerify: event.target.value });\r\n    }\r\n\r\n    emailOnChange(event) {\r\n        this.setState({email: event.target.value });\r\n    }\r\n\r\n    closeModal() {\r\n        this.props.sessionActions.showSignupModal(false);\r\n    }\r\n\r\n    onClickLogin() { \r\n        try {\r\n\r\n            let email = this.state.email;\r\n            let password = this.state.password;      \r\n            \r\n            if (email === '') {\r\n                this.displayEmailError('Please enter your email');\r\n                return;\r\n            }        \r\n\r\n            if (password === '') {            \r\n                this.displayPasswordError('Please enter your password');\r\n                return;\r\n            } \r\n                            \r\n            this.props.sessionActions.login(email, password);       \r\n                      \r\n            this.props.history.push(\"/MySlideshows\");   \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    onClickSignUp() { \r\n        try {\r\n            let email = this.state.email;\r\n            let password = this.state.password;\r\n            let password2 = this.state.passwordVerify;\r\n            this.clearWarnings();\r\n\r\n            if (email === '') {\r\n                this.setState({signupError: 'Please enter a valid username'});\r\n                return;\r\n            }         \r\n\r\n            if (password!== password2) {\r\n                this.setState({signupError: 'Passwords do not match'});            \r\n                return;\r\n            } \r\n\r\n            if (password === '' || password2 === '') {\r\n                this.setState({signupError: 'Please enter and verify your password'});                            \r\n                return;\r\n            } \r\n                                    \r\n            this.props.sessionActions.signupUser(email, password, password2);                       \r\n            \r\n            this.props.history.push(\"/MySlideshows\");        \r\n        \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }  \r\n\r\n    clearWarnings(){\r\n        this.setState({signupError: ''});\r\n    }\r\n        \r\n    validateEmail(email) {\r\n        // eslint-disable-next-line\r\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    render() {                   \r\n        if (this.props.session.loggedIn === true)\r\n            return <React.Fragment></React.Fragment>;\r\n\r\n        if (!this.state.alreadyMember) {\r\n            return ( \r\n                <Modal isOpen={true} >               \r\n                    <ModalBody>\r\n                        <div className=\"signup-modal\">\r\n                            {/* <img src=\"images/logo.png\" alt=\"OABroadcast\" /> */}\r\n                            <div className=\"closeModal\" onClick={this.closeModal}>X</div>\r\n                              \r\n                            <div className=\"email-label\">Sign up to save configurations!</div>                                                                    \r\n                            {this.state.signupError !== '' ? <div className=\"text-center font-italic\">{this.state.signupError}</div> : ''}\r\n                            {this.props.session.signupFailed === true ? <div className=\"text-center font-italic\">Email already in use!</div> : ''}\r\n                            <TextInputPrimitive type=\"email\" id=\"emailSignup\" placeholder=\"email\" onChange={this.emailOnChange} />                                                                                         \r\n                            <TextInputPrimitive type=\"password\" id=\"password1\" placeholder=\"password\" onChange={this.passwordOnChange} />                                                           \r\n                            <TextInputPrimitive type=\"password\" id=\"password2\" placeholder=\"re-enter password\" onChange={this.passwordVerifyOnChange} />\r\n                            <Button color=\"primary\" onClick={this.onClickSignUp}>Sign Up!</Button>\r\n                            <span className=\"loginLink\" onClick={this.memberLogin}>Already a member? Click here!</span>                \r\n                                        \r\n                        </div>\r\n                    </ModalBody>                \r\n                </Modal>                               \r\n            );\r\n        }   \r\n\r\n        return ( \r\n            <Modal isOpen={true} >               \r\n                <ModalBody>\r\n                    <div className=\"signup-modal\">\r\n                        {/* <img src=\"images/logo.png\" alt=\"OABroadcast\" /> */}\r\n                        <div className=\"closeModal\" onClick={this.closeModal}>X</div>\r\n                        <div className=\"textInput-container form-group\">  \r\n                            <div className=\"email-label\">Login</div>   \r\n                            {this.props.session.loginFailed === true ? <div className=\"text-center font-italic\">Login Failed! Incorrect username/password</div> : ''}\r\n                            <TextInputPrimitive type=\"email\" id=\"emailSignup\" placeholder=\"email\" onChange={this.emailOnChange}/>                             \r\n                            <TextInputPrimitive type=\"password\" id=\"password1\" placeholder=\"password\" onChange={this.passwordOnChange}/>                                                        \r\n                            <Button color=\"primary\" onClick={this.onClickLogin}>Login</Button>\r\n                            {/* <span className=\"loginLink\" onClick={this.memberSignUp}>Not a member? Sign up!</span>                    */}\r\n                        </div>             \r\n                    </div>\r\n                </ModalBody>                \r\n            </Modal>                               \r\n            );\r\n        }\r\n    }\r\n\r\n    function mapStateToProps(state, ownProps) {    \r\n        return {\r\n            session: state.session,\r\n            api: state.api\r\n        };\r\n    }\r\n  \r\n    function mapDispatchToProps(dispatch) {\r\n        return {\r\n            sessionActions: bindActionCreators(sessionActions, dispatch)            \r\n        };\r\n    }    \r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SignUpModal)); ","import React, { Component } from 'react';\r\nimport queryString from 'query-string'\r\nimport { Zoom } from 'react-slideshow-image';\r\nimport './Slideshow.css';\r\nimport * as sessionActions from '../../actions/sessionActions';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst zoomOutProperties = {\r\n    duration: 9000,\r\n    transitionDuration: 500,\r\n    infinite: true,\r\n    indicators: true,\r\n    scale: 0.4,\r\n    arrows: true\r\n  }\r\n\r\nclass SlideshowFullscreen extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);          \r\n      }\r\n\r\n    componentDidMount() {        \r\n        this.props.sessionActions.getLiveSlideshow(this.props.session.email);\r\n    }\r\n\r\n    render() {       \r\n      if (!this.props.session) return <React.Fragment />   \r\n      if (this.props.session.imageList.length === 0) return <React.Fragment />\r\n        return (\r\n        <React.Fragment>        \r\n          <div className=\"slideshow-container-fullscreen\">            \r\n              <h1>\r\n              <Zoom {...zoomOutProperties}>\r\n                  { this.props.session.imageList.map((each) => \r\n                      <img key={each.public_id} style={{width: \"100%\"}} src={each.url} />) }\r\n              </Zoom>\r\n              </h1>\r\n          </div>\r\n        </React.Fragment>\r\n        );\r\n    }\r\n} \r\n\r\nfunction mapStateToProps(state, ownProps) {    \r\n    return {\r\n      session: state.session    \r\n    };\r\n  }\r\n  \r\n    function mapDispatchToProps(dispatch) {\r\n        return {\r\n            sessionActions: bindActionCreators(sessionActions, dispatch)          \r\n        };\r\n    }   \r\n  \r\n  export default withRouter(connect(mapStateToProps, mapDispatchToProps)(SlideshowFullscreen));","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = ({displayText, ...props}) => {        \r\n    return (           \r\n        <button {...props}> { displayText } </button>        \r\n    );      \r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport * as sessionActions from '../../actions/sessionActions';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\nimport { Table } from 'reactstrap';\r\nimport Button from '../Common/Button/Button';\r\nimport './MySlideshows.css';\r\nimport authentication from '../../modules/authentication';\r\nimport queryString from 'query-string';\r\n// import styled from 'styled-components';\r\n\r\n\r\nclass MySlideshows extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);            \r\n      \r\n        this.deleteSlideshow = this.deleteSlideshow.bind(this);\r\n        this.editSlideshow = this.editSlideshow.bind(this);\r\n\r\n        let username = authentication.verifyToken();\r\n\r\n        if (username) {\r\n          if (this.props.session.email === \"\" || this.props.session.loggedIn === false) {            \r\n              this.props.sessionActions.loginSuccess(username);                  \r\n          }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.props.location.\r\n        let params = queryString.parse(this.props.location.search);\r\n        \r\n        if (params) {\r\n            let username = params.username;\r\n            let tagName = params.tagName;\r\n            this.props.sessionActions.login(username, tagName);   \r\n        }\r\n        this.props.sessionActions.getUserSlideshows(this.props.session.email);\r\n    }\r\n\r\n    deleteSlideshow(id, tagName) {\r\n        this.props.sessionActions.deleteSlideshow(id, tagName);\r\n    }\r\n\r\n    editSlideshow(e, tagName) {\r\n        //this.props.sessionActions.editSlideshow(tagName, this.props.session.email);\r\n\r\n        this.props.history.push(\"/EditSlideshow\", {tagName: tagName});\r\n    }\r\n   \r\n    render() {        \r\n        if (!this.props.session.userSlideshows) \r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <h2 className=\"text-center\">My Slideshows</h2>\r\n                </React.Fragment>);\r\n\r\n        return (               \r\n            <React.Fragment>\r\n                <Header />\r\n                <h2 className=\"text-center\">My Slideshows</h2>\r\n\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            {/* <th>Name</th> */}\r\n                            <th>Start Date</th>\r\n                            <th>End Date</th>                    \r\n                            <th></th>\r\n                           {\r\n                            this.props.session.isAdmin === true ?\r\n                                <th></th>\r\n                            : <React.Fragment />\r\n                           }\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>                    \r\n                        {this.props.session.userSlideshows.map(item => {  \r\n                            let start = new Date(item.StartDate);\r\n                            let end = new Date(item.EndDate);\r\n                            return(\r\n                                <tr>\r\n                                    <td>{item.ID}</td>                                \r\n                                    {/* <td>{item.TagName}</td> */}\r\n                                    <td>{start.toString()}</td>\r\n                                    <td>{end.toString()}</td>\r\n                                    <td>\r\n                                        <Button \r\n                                            id={item.configurationId} \r\n                                            showButton={true}\r\n                                            className=\"btn btn-secondary btn-sm emailDesign\"\r\n                                            type=\"Button\"\r\n                                            onClick={(e) => this.editSlideshow(e, item.TagName)}\r\n                                            displayText=\"Edit\" \r\n                                        />\r\n                                    </td> \r\n                                {                                                            \r\n                                this.props.session.isAdmin === true ?\r\n                                    <td>\r\n                                        <Button \r\n                                            id={item.configurationId} \r\n                                            showButton={true}\r\n                                            className=\"btn btn-secondary btn-sm emailDesign danger\"\r\n                                            type=\"Button\"\r\n                                            onClick={(e) => this.deleteSlideshow(item.ID, item.TagName)}\r\n                                            displayText=\"Delete\" \r\n                                        />\r\n                                    </td> \r\n                                : <React.Fragment />\r\n                                }                                  \r\n                                </tr>     \r\n                            );\r\n                        })}                \r\n                    </tbody>\r\n                </Table>        \r\n            </React.Fragment>\r\n        );\r\n    }\r\n} \r\n\r\nfunction mapStateToProps(state, ownProps) {    \r\n    return {\r\n      session: state.session    \r\n    };\r\n  }\r\n  \r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        sessionActions: bindActionCreators(sessionActions, dispatch)          \r\n    };\r\n}   \r\n  \r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MySlideshows));","import React, { Component } from 'react';\r\nimport * as sessionActions from '../../actions/sessionActions';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport styled from 'styled-components'\r\nimport Button from '../Common/Button/Button';\r\nimport Header from '../Header/Header';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios'\r\nimport authentication from '../../modules/authentication';\r\n\r\nexport const ImgStyled = styled.img`\r\n    width:200px;\r\n    height:200px;\r\n`;\r\n\r\nexport const H2 = styled.h2`\r\n    color: #000;\r\n`;\r\n\r\nexport const ButtonStyled = styled(Button)`\r\n    font-size:16px;\r\n    background-color:#4f4f4f;\r\n    color: #fff;\r\n    height:35px;\r\n    width:200px;\r\n    border-radius: 5px;\r\n    outline: none !important;\r\n    border: none !important;  \r\n    cursor:pointer; \r\n    margin-top:15px;\r\n`;\r\n\r\nexport const RowStyled = styled(Row)`\r\n    margin-bottom:1em;\r\n    margin-top:1em;\r\n`;\r\n\r\nclass EditSlideshow extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);    \r\n      \r\n        this.removeImage = this.removeImage.bind(this);\r\n        this.newImage = this.newImage.bind(this);\r\n        this.state = {  \r\n            disabled: false,     \r\n            files: [],\r\n            tagName: this.props.location.state.tagName,\r\n        }\r\n\r\n        let username = authentication.verifyToken();\r\n\r\n        if (username) {\r\n            if (this.props.session.email === \"\" || this.props.session.loggedIn === false) {            \r\n                this.props.sessionActions.loginSuccess(username);                  \r\n            }\r\n        } \r\n      }\r\n\r\n    componentDidMount() {            \r\n        let tagName = this.state.tagName;\r\n\r\n        if (tagName === '' || tagName === undefined || tagName === null)\r\n            tagName = 'Demo';\r\n                \r\n        this.props.sessionActions.getSlidesByTag(tagName);\r\n    }\r\n\r\n    removeImage(publicId) {\r\n        let tagName = this.props.location.state.tagName;\r\n        this.props.sessionActions.deleteImage(publicId, tagName);  \r\n    }\r\n\r\n    onDrop(files) {\r\n        let allFiles = [];\r\n        this.state.files.forEach(function(element) {\r\n          allFiles.push(element);\r\n        });      \r\n\r\n        let newFiles = files.map(file => Object.assign(file, {\r\n          preview: URL.createObjectURL(file)\r\n        }));\r\n\r\n        newFiles.forEach(function(f) {\r\n          allFiles.push(f);\r\n        });\r\n\r\n        this.setState({\r\n          files: newFiles.map(file => Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n          }))\r\n        });\r\n\r\n        files = this.state.newFiles;\r\n        // Push all the axios request promise into a single array\r\n        const uploaders = newFiles.map(file => {\r\n\r\n          var tagName = this.props.location.state.tagName;\r\n          // Initial FormData\r\n          const formData = new FormData();\r\n          formData.append(\"file\", file);       \r\n          formData.append(\"tags\", tagName);\r\n          formData.append(\"upload_preset\", \"vcuvbm56\"); // Replace the preset name with your own\r\n          formData.append(\"api_key\", \"812922695185549\"); // Replace API key with your own Cloudinary key\r\n          formData.append(\"timestamp\", (Date.now() / 1000) | 0);\r\n          \r\n          // Make an AJAX upload request using Axios (replace Cloudinary URL below with your own)\r\n          return axios.post(\"https://api.cloudinary.com/v1_1/oabroad/image/upload\", formData, {\r\n            headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\r\n          }).then(response => {\r\n            this.props.sessionActions.getSlidesByTag(tagName); \r\n          })\r\n        });\r\n      }         \r\n\r\n    newImage() {\r\n\r\n    }\r\n\r\n    render() {              \r\n        return (\r\n        <React.Fragment>\r\n         <Header /> \r\n          <div className=\"slideshow-container\">             \r\n          <Container>\r\n            <H2>Edit Slideshow</H2>\r\n            {/* <RowStyled>               \r\n                <Col xs=\"12\" xl=\"12\" className=\"text-right\">\r\n                    <ButtonStyled displayText=\"New Image\" />\r\n                </Col>\r\n            </RowStyled> */}\r\n            <div className=\"dropzone\">\r\n              <Dropzone onDrop={this.onDrop.bind(this)} >\r\n                {({getRootProps, getInputProps}) => (\r\n                  <div {...getRootProps()}>\r\n                    <input {...getInputProps()} />                    \r\n                     <p className=\"text-center\">\r\n                        \r\n                        <span className=\"dropFileLabel\">Drop files here, or click to select files</span>\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </Dropzone>\r\n            </div>\r\n            <RowStyled>                             \r\n            { this.props.session.imageList.map((each) =>                \r\n                <Col xs=\"12\" xl=\"3\">                           \r\n                    <div>\r\n                        <ImgStyled src={each.url} />                                        \r\n                        <ButtonStyled displayText=\"Remove\" onClick={((e) => this.removeImage(each.public_id))} />\r\n                    </div>          \r\n                </Col>               \r\n            )}                          \r\n            </RowStyled>\r\n              </Container>\r\n          </div>          \r\n        </React.Fragment>\r\n        );\r\n    }\r\n} \r\n\r\nfunction mapStateToProps(state, ownProps) {    \r\n    return {\r\n      session: state.session    \r\n    };\r\n  }\r\n  \r\n    function mapDispatchToProps(dispatch) {\r\n        return {\r\n            sessionActions: bindActionCreators(sessionActions, dispatch)          \r\n        };\r\n    }   \r\n  \r\n  export default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditSlideshow));","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as sessionActions from '../../actions/sessionActions';\r\nimport Header from '../Header/Header';\r\nimport generator from '../../modules/generator';\r\nimport { Button, FormGroup, Input } from 'reactstrap';\r\nimport styled from 'styled-components';\r\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\n\r\nexport const GenerateButton = styled(Button)`\r\n    width:140px !important;\r\n    display: inline-block;\r\n`;\r\n\r\nexport const AccessCodeInput = styled(Input)`\r\n    width: 84%;\r\n    display: inline-block;\r\n`;\r\n\r\nexport const AccessCodeLabel = styled.label`\r\n    width: 100%;\r\n`;\r\n\r\nexport const Alert = styled.h3`\r\n    text-align: center;\r\n    background-color: #63c79f;\r\n    color: white;\r\n    padding-top:10px;\r\n    padding-bottom:10px;\r\n`;\r\nclass Administration extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onStartDateChange = this.onStartDateChange.bind(this);\r\n        this.onEndDateChange = this.onEndDateChange.bind(this);\r\n        this.generateCode = this.generateCode.bind(this);\r\n        this.createGuestSlideshow = this.createGuestSlideshow.bind(this);\r\n        this.onUsernameChange = this.onUsernameChange.bind(this);        \r\n        this.onAccessCodeChange = this.onAccessCodeChange.bind(this);\r\n\r\n        this.state = {  \r\n            startDate: null,\r\n            endDate: null,\r\n            accessCode: '',\r\n            username: '',                        \r\n            alert: ''\r\n        }\r\n    }\r\n\r\n    generateCode(event) {\r\n        let accessCode = generator.generateAccessCode(8);\r\n\r\n        this.setState({accessCode: accessCode});\r\n    }\r\n    onStartDateChange(event) {\r\n        this.setState({ startDate: event.target.value });        \r\n    }\r\n\r\n    onEndDateChange(event) {\r\n        this.setState({ endDate: event.target.value });        \r\n    }\r\n\r\n    onUsernameChange(event) {\r\n        this.setState({username: event.target.value });\r\n    }\r\n\r\n    onAccessCodeChange(event) {\r\n        this.setState({ accessCode: event.target.value });\r\n    }\r\n\r\n    createGuestSlideshow() {\r\n        this.props.sessionActions.createUser(this.state.username, this.state.accessCode);\r\n        this.props.sessionActions.saveGuestSlideshow(this.state.username, this.state.accessCode, this.state.startDate, this.state.endDate);\r\n        this.setState({alert: 'Successfully saved!'});  \r\n        this.props.history.push(\"/MySlideshows\");           \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header />                          \r\n                <h2 className=\"text-center\">Administration</h2>\r\n                {this.state.alert !== '' ? <Alert>{this.state.alert}</Alert> : <React.Fragment /> }\r\n                <form className=\"container uploadForm\">                                    \r\n                    <FormGroup>\r\n                        <label for=\"username\">Username:</label>\r\n                        <Input type=\"text\" id=\"username\" name=\"username\" onChange={this.onUsernameChange} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <AccessCodeLabel for=\"accessCode\" readonly>Access Code:</AccessCodeLabel>\r\n                        <AccessCodeInput type=\"text\" id=\"accessCode\" name=\"accessCode\" onChange={this.onAccessCodeChange} value={this.state.accessCode} readOnly={true}/>\r\n                        <GenerateButton onClick={this.generateCode}>Generate Code</GenerateButton>\r\n                    </FormGroup>                   \r\n                    <FormGroup>\r\n                        <label for=\"start\">Start Date/Time:</label>\r\n                        <Input type=\"datetime-local\" id=\"start\" name=\"start\" onChange={this.onStartDateChange} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <label for=\"end\">End Date/Time:</label>\r\n                        <Input type=\"datetime-local\" id=\"end\" name=\"end\" onChange={this.onEndDateChange} />\r\n                    </FormGroup>\r\n                    <Button onClick={this.createGuestSlideshow}>Submit</Button>\r\n                </form>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {    \r\n    return {\r\n      session: state.session    \r\n    };\r\n  }\r\n  \r\n    function mapDispatchToProps(dispatch) {\r\n        return {\r\n            sessionActions: bindActionCreators(sessionActions, dispatch)          \r\n        };\r\n    }   \r\n  \r\n  export default withRouter(connect(mapStateToProps, mapDispatchToProps)(Administration));","import React, { Component } from 'react';\nimport './App.css';\nimport CreateSlideshow from './components/CreateSlideshow/CreateSlideshow';\nimport { Route } from 'react-router-dom';\nimport SignupModal from './components/SignUpModal/SignUpModal';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport * as sessionActions from './actions/sessionActions';\nimport { withRouter } from 'react-router-dom';\nimport authentication from './modules/authentication';\nimport SlideshowFullscreen from './components/Slideshow/SlideshowFullscreen';\nimport MySlideshows from './components/MySlideshows/MySlideshows';\nimport EditSlideshow from './components/EditSlideshow/EditSlideshow';\nimport Administration from './components/Administration/Administration';\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props, context);  \n\n    let user = authentication.verifyToken();\n\n    if (user) {\n      if (this.props.session.email === \"\" || this.props.session.loggedIn === false) {            \n          this.props.sessionActions.loginSuccess(user);                  \n      }\n    }\n  }\n\n  render() {  \n    return (\n      <React.Fragment>            \n        <switch>        \n          <Route exact path=\"/\" component={SlideshowFullscreen}/>                  \n          {/* <Route path=\"/CreateSlideshow\" component={CreateSlideshow}/>            */}\n          <Route path=\"/MySlideshows\" component={MySlideshows}/>\n          <Route path=\"/EditSlideshow\" component={EditSlideshow}/>\n          <Route path=\"/Administration\" component={Administration} />          \n        </switch>\n      <SignupModal />\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {    \n  return {\n    session: state.session    \n  };\n}\n\n  function mapDispatchToProps(dispatch) {\n      return {\n          sessionActions: bindActionCreators(sessionActions, dispatch)          \n      };\n  }   \n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\r\nimport session from './sessionReducer';\r\nimport * as types from '../actions/actionTypes';\r\n\r\nconst appReducer = combineReducers({\r\n    session\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n    if (action.type === types.RESET_APP) {\r\n        state = {...state, session: null }\r\n    }\r\n\r\n    return appReducer(state, action);\r\n}\r\n\r\nexport default rootReducer;","import * as types from '../actions/actionTypes';\r\n\r\nexport default function sessionReducer(state = [], action) {\r\n    switch(action.type) {              \r\n\r\n        case types.SHOW_SIGNUP_MODAL:\r\n            return {...state, showSignupModal: action.showSignupModal}\r\n\r\n        case types.LOGIN_SUCCESS:\r\n            return {...state, loggedIn: true, company: action.user.company, isAdmin: action.user.isAdmin, email: action.user.username, loginFailed: false, showSignupModal: false }\r\n\r\n        case types.LOGIN_FAILED:\r\n            return {...state, loginFailed: true }\r\n\r\n        case types.SIGNUP_SUCCESS:\r\n            return {...state, loggedIn: true, email: action.email, loginFailed: false, signupFailed: false, showSignupModal: false }\r\n\r\n        case types.SIGNUP_FAILED:\r\n            return {...state, signupFailed: true }\r\n        \r\n        case types.GET_SLIDES_SUCCESS:\r\n            return {...state, imageList: action.imageList }\r\n\r\n        case types.GET_USER_SLIDESHOWS_SUCCESS:\r\n            return {...state, userSlideshows: action.userSlideshows }\r\n\r\n        case types.SIGN_OUT:\r\n            return {...state, loggedIn: false, email: '', imageList: [] } \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport configureStore from './store/configureStore';\nimport {Provider} from 'react-redux';\n\nconst initialState = {\n    session: {\n        imageList: [],\n        loggedIn: false\n    }\n}\n\nconst store = configureStore (initialState);\n\nReactDOM.render(<Router><Provider store={store}><App /></Provider></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport rootReducer from '../reducers';\r\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport default function configureStore(initialState) {\r\n    const enhancers = compose(\r\n        applyMiddleware(thunk, reduxImmutableStateInvariant()),\r\n        window.devToolsExtension() ? window.devToolsExtension() : f => f        \r\n    );\r\n\r\n    return createStore(\r\n        rootReducer, \r\n        initialState, \r\n        enhancers\r\n    );\r\n}","var jwt = require('jsonwebtoken');\r\n\r\nexports.verifyToken = function() {\r\n    let token = window.localStorage.getItem('tk');\r\n\r\n    if (token === null) return;\r\n    \r\n    let decoded = jwt.decode(token);    \r\n\r\n    var dateNow = new Date();\r\n\r\n    let user = {\r\n        username: decoded.username,\r\n        isAdmin: decoded.isAdmin,\r\n        company: decoded.company\r\n    }\r\n    if (decoded.exp > dateNow.getTime() / 1000) \r\n        return user;               \r\n    else \r\n        return null;    \r\n}\r\n\r\nexports.getUserFromToken = function() {\r\n    let token = window.localStorage.getItem('tk');\r\n\r\n    if (token === null) return '';\r\n    \r\n    let decoded = jwt.decode(token);    \r\n\r\n    return decoded.username;\r\n}\r\n\r\nexports.signOut = function() {\r\n    localStorage.removeItem('tk');\r\n}"],"sourceRoot":""}